swagger: '2.0'
info:
  description: iRODS Metadata Templates
  version: 1.0.0
  title: iRODS Metadata Templates
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: virtserver.swaggerhub.com
basePath: /metadata/template/1.0.0
tags:
  - name: Templates
    description: Template Operations
  - name: Element
    description: Element Operations
schemes:
  - https
  - http
paths:
  /template:
    post:
      tags:
        - Templates
      summary: Add a new Template
      description: Adding a new metadata template
      operationId: addTemplate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: templateData
          description: Template object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/MDTemplate'
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - Templates
      summary: Update an existing Template
      description: ''
      operationId: updateTemplate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: templateData
          description: Template object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/MDTemplate'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Template not found
        '405':
          description: Validation exception
  '/template/{guid}':
    get:
      tags:
        - Templates
      summary: Get template by id
      operationId: findTemplateByGuid
      description: |
        By passing in the appropriate options, you can search for
        available templates
      produces:
        - application/json
      parameters:
        - in: path
          name: guid
          description: pass an a guid to get template
          required: true
          type: string
      responses:
        '200':
          description: search results matching criteria
          schema:
            items:
              $ref: '#/definitions/MDTemplate'
        '400':
          description: bad input parameter
    delete:
      tags:
        - Templates
      summary: Delete a Template
      description: ''
      operationId: deleteTemplate
      produces:
        - application/xml
        - application/json
      parameters:
        - name: guid
          in: path
          description: template guid to delete
          required: true
          type: string
          format: UUID
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Template not found
  '/template/{templateGuid}/element':
    post:
      tags:
        - Element
      summary: Create Element
      description: Add element for template.
      operationId: addElement
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: templateGuid
          description: unique object task name
          required: true
          type: string
        - in: body
          name: body
          description: Created Element object
          required: true
          schema:
            $ref: '#/definitions/MDTemplateElement'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Element supplied
        '404':
          description: Element not found
    put:
      tags:
        - Element
      summary: Updated Element
      operationId: updateElement
      produces:
        - application/xml
        - application/json
      parameters:
        - name: templateGuid
          in: path
          description: Element that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated Element object
          required: true
          schema:
            $ref: '#/definitions/MDTemplateElement'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid Element supplied
        '404':
          description: Element not found
  '/template/{templateGuid}/element/{elementGuid}':
    get:
      tags:
        - Element
      summary: Get Element by guid
      description: ''
      operationId: getElementByGuid
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: templateGuid
          description: 'The Template Guid. '
          required: true
          type: string
        - name: elementGuid
          in: path
          description: 'The Element guid needs to be fetched'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MDTemplateElement'
        '400':
          description: Invalid guid supplied
        '404':
          description: Element not found

    delete:
      tags:
        - Element
      summary: Delete Element
      operationId: deleteElement
      produces:
        - application/xml
        - application/json
      parameters:
        - name: templateGuid
          in: path
          description: 'The Template Guid. '
          required: true
          type: string
        - name: elementGuid
          in: path
          description: 'The Element guid needs to be fetched'
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid guid supplied
        '404':
          description: Element not found
definitions:
  MDTemplate:
    type: object
    properties:
      id:
        type: integer
        format: int64
      templateName:
        type: string
        description: The name of the template, (e.g. Dublin Core). This does not need to be unique
      i18name:
        type: string
        description: An optional resource bundle property reference to an internationalized name for the template
      i18description:
        type: string
        description: An optional resource bundle property reference to an internationalized description for the template
      createTs:
        type: string
        format: date-time
        description: Timestamp for template creation
      modifyTs:
        type: string
        format: date-time
        description: Timestamp for template modification
      version:
        type: integer
        format: int32
        description: Version of the template
      description:
        type: string
        description: User guidance on the purpose and use of the given template, can be displayed as help
      guid:
        type: string
        format: UUID
        description: A system generated GUID for the template that serves as a unique identifier. The system should behave such that a blank GUID on creation will result in the generation of a GUID, while specification of a GUID on create would use that provided GUID as the unique identifier.
      access_type:
        type: string
        description: Accesibility of template (e.g. public vs. user). This acts as a role identifier for future expansion
      owner:
        type: string
        description: user id of the owner of the template. This is typically the iRODS user and can interact with the access type for basic control on template usage
      elements:
        type: array
        description: A colletion of child template elements
        items:
          $ref: '#/definitions/MDTemplateElement'
    xml:
      name: MDTemplate
  MDTemplateElement:
    type: object
    properties:
      guid:
        type: string
        format: UUID
        description: A system generated GUID for the template that serves as a unique identifier. The system should behave such that a blank GUID on creation will result in the generation of a GUID, while specification of a GUID on create would use that provided GUID as the unique identifier.
      name:
        type: string
        description: Label for the element, analagous to the avu attribute
      i18name:
        type: string
        description: An optional resource bundle property reference to an internationalized name for the template element
      i18description:
        type: string
        description: An optional resource bundle property reference to an internationalized description for the template element
      description:
        type: string
        description: User guidance on the purpose and use of the given field, can be displayed as help
      defaultValue:
        description: Value to use or select given no user input
        type: string
      type:
        type: string
        description: Type of element [string, int, list, boolean, float, range etc]
      unit:
        type: string
        description: Unit of measure associated with entered value, e.g. a length field may have a unit of meters
      required:
        type: boolean
        description: Indicates that a value must be enetered
      options:
        type: string
        description: Type-specific options for a field, e.g. if a list this is a delimited array of possible values. For an ontology it may be a reference to a vocabulary
      validationExp:
        type: string
        description: Type-specific validation hint, primarily via regex
      cardinalityMin:
        type: integer
        description: Minimum cardinality, minumum number of element x to be defined
      cardinalityMax:
        type: integer
        description: Maximum cardinality, maximum number of element x to be defined
      elements:
        type: array
        description: An array of child elements in the case of a grouping
        items:
          $ref: '#/definitions/MDTemplateElement'
    xml:
      name: MDTemplateElement
