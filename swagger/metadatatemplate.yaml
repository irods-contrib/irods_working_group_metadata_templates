swagger: '2.0'
info:
  description: iRODS Metadata Templates
  version: 1.0.0
  title: iRODS Metadata Templates
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: virtserver.swaggerhub.com
basePath: /metadata/template/1.0.0
tags:
  - name: Templates
    description: Template Operations
  - name: Element
    description: Element Operations
schemes:
  - https
  - http
paths:
  /template:
    post:
      tags:
        - Templates
      summary: Add a new Template
      description: Adding a new metadata template
      operationId: addTemplate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: templateData
          description: Template object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/MDTemplate'
      responses:
        '405':
          description: Invalid input
    put:
      tags:
        - Templates
      summary: Update an existing Template
      description: ''
      operationId: updateTemplate
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: templateData
          description: Template object that needs to be added to the system
          required: true
          schema:
            $ref: '#/definitions/MDTemplate'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Template not found
        '405':
          description: Validation exception
  '/template/{guid}':
    get:
      tags:
        - Templates
      summary: Get template by id
      operationId: findTemplateByGuid
      description: |
        By passing in the appropriate options, you can search for
        available templates
      produces:
        - application/json
      parameters:
        - in: path
          name: guid
          description: pass an a guid to get template
          required: true
          type: string
      responses:
        '200':
          description: search results matching criteria
          schema:
            items:
              $ref: '#/definitions/MDTemplate'
        '400':
          description: bad input parameter
    delete:
      tags:
        - Templates
      summary: Delete a Template
      description: ''
      operationId: deleteTemplate
      produces:
        - application/xml
        - application/json
      parameters:
        - name: guid
          in: path
          description: template guid to delete
          required: true
          type: integer
          format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Template not found
  '/template/{guid}/element':
    post:
      tags:
        - Element
      summary: Create Element
      description: Add element for template.
      operationId: addElement
      produces:
        - application/xml
        - application/json
      parameters:
        - in: path
          name: guid
          description: unique object task name
          required: true
          type: integer
        - in: body
          name: body
          description: Created Element object
          required: true
          schema:
            $ref: '#/definitions/MDTemplateElement'
      responses:
        default:
          description: successful operation
  '/template/{guid}/element/{guid}':
    get:
      tags:
        - Element
      summary: Get Element by guid
      description: ''
      operationId: getElementByGuid
      produces:
        - application/xml
        - application/json
      parameters:
        - name: guid
          in: path
          description: 'The Element that needs to be fetched. '
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MDTemplateElement'
        '400':
          description: Invalid guid supplied
        '404':
          description: Element not found
    put:
      tags:
        - Element
      summary: Updated Element
      operationId: updateElement
      produces:
        - application/xml
        - application/json
      parameters:
        - name: guid
          in: path
          description: Element that need to be updated
          required: true
          type: integer
        - in: body
          name: body
          description: Updated Element object
          required: true
          schema:
            $ref: '#/definitions/MDTemplateElement'
      responses:
        '400':
          description: Invalid Element supplied
        '404':
          description: Element not found
    delete:
      tags:
        - Element
      summary: Delete Element
      operationId: deleteElement
      produces:
        - application/xml
        - application/json
      parameters:
        - name: guid
          in: path
          description: The Element that needs to be deleted
          required: true
          type: integer
      responses:
        '400':
          description: Invalid guid supplied
        '404':
          description: Element not found
definitions:
  MDTemplate:
    type: object
    properties:
      templateName:
        type: string
      createTs:
        type: string
        format: date-time
      modifyTs:
        type: string
        format: date-time
      version:
        type: integer
        format: int32
      description:
        type: string
      guid:
        type: string
        format: UUID
      access_type:
        type: string
      owner:
        type: string
      elements:
        type: array
        items:
          $ref: '#/definitions/MDTemplateElement'
    xml:
      name: MDTemplate
  MDTemplateElement:
    type: object
    properties:
      guid:
        type: string
        format: UUID
        description: 'GUID uniquely identifying the element'
      name:
        type: string
        description: 'Label for the element, analagous to the avu attribute'
      defaultValue:
        description: 'Value to use or select given no user input'
        type: string
      type:
        type: string
        description: 'Type of element [string, int, list, etc]'
      unit:
        type: string
        description: 'Unit of measure associated with entered value, e.g. a length field may have a unit of meters'
      required:
        type: boolean
        description: 'Indicates that a value must be enetered'
      options:
        type: string
        description: 'Type-specific options for a field, e.g. if a list this is a delimited array of possible values. For an ontology it may be a reference to a vocabulary'
      access_type:
        type: string
        description: 'Type of metadata reference, e.g. a literal or an http referenceable link'
      validationExp:
        type: string
        description: 'Type-specific validation hint, primarily via regex'
      cardinalityMin:
        type: integer
        description: 'Minimum cardinality, minumum number of element x to be defined'
      cardinalityMax:
        type: integer
        description: 'Maximum cardinality, maximum number of element x to be defined'
      elements:
        type: array
        description: 'An array of child elements in the case of a grouping'
        items:
          $ref: '#/definitions/MDTemplateElement'
    xml:
      name: MDTemplateElement
